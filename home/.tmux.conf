set-window-option -g mode-keys vi

# 0 is too far from ` ;)
set -g base-index 1

# $Id: vim-keys.conf,v 1.2 2010/09/18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h
bind C attach-session -c "#{pane_current_path}"

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

bind -n M-H swap-pane -s {left-of}
bind -n M-J swap-pane -s {down-of}
bind -n M-K swap-pane -s {up-of}
bind -n M-L swap-pane -s {right-of}

bind -n M-< resize-pane -L 1
bind -n M-> resize-pane -R 1
bind -n M-+ resize-pane -D 1
bind -n M-- resize-pane -U 1

bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind -n M-0 select-window -t 10

bind -n M-r run '~/.tmux.sh resize 1'
bind -n M-R run '~/.tmux.sh resize 2'
bind -n M-e run '~/.tmux.sh resize 3'
bind -n M-E run '~/.tmux.sh resize 4'

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10

bind -n M-"'" split-window -v -c "#{pane_current_path}"
bind -n M-Enter split-window -h -c "#{pane_current_path}"

bind J command-prompt -p "send pane to:"  "join-pane -h -t '%%'"

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi
set -g default-terminal "screen-256color"

bind-key R respawn-window

# create a session with a throw-away window
 new true
#
# # for future windows, stay open after the command exits
#set set-remain-on-exit on
#
# # create the windows we really want
neww -n vim
splitw -v -p 20 -t 0
#
# # for future windows, revert r-o-e to global value
#set -u set-remain-on-exit

#splitw -v -p 85 -t 0 ls
#selectw -t 1
#selectp -t 0

set -sg escape-time 0

source-file "${HOME}/dotfiles/tmux-themepack/basic.tmuxtheme"
set -g status-right "#H #[fg=white]Â« #[fg=yellow]%H:%M #[fg=green]%b %d"
set -g status-bg default
set -g status-left-bg default
set -g status-right-bg default

set -ga update-environment ' VIRTUAL_ENV GOPATH'

# make clipboard work with mac os
set -g default-command "${HOME}/.tmux-reattach-to-user-namespace.sh ${SHELL}"
